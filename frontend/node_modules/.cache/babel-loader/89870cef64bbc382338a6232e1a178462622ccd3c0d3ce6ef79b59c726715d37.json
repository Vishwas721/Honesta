{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\SelectRole.js\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectRole() {\n  _s();\n  const navigate = useNavigate();\n  const handleRoleSelection = async role => {\n    try {\n      const res = await fetch(\"http://localhost:3001/set-role\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          role\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        navigate(role === \"admin\" ? \"/dashboard\" : \"/exam\");\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      alert(\"Error setting role\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold\",\n      children: \"Select Your Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"m-4 p-2 bg-blue-500 text-white\",\n      onClick: () => handleRoleSelection(\"admin\"),\n      children: \"Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"m-4 p-2 bg-green-500 text-white\",\n      onClick: () => handleRoleSelection(\"student\"),\n      children: \"Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectRole, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectRole;\nexport default SelectRole;\nvar _c;\n$RefreshReg$(_c, \"SelectRole\");","map":{"version":3,"names":["useNavigate","jsxDEV","_jsxDEV","SelectRole","_s","navigate","handleRoleSelection","role","res","fetch","method","credentials","headers","body","JSON","stringify","data","json","ok","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/SelectRole.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction SelectRole() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleRoleSelection = async (role) => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:3001/set-role\", {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ role }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        navigate(role === \"admin\" ? \"/dashboard\" : \"/exam\");\r\n      } else {\r\n        alert(data.error);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error setting role\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen\">\r\n      <h2 className=\"text-2xl font-bold\">Select Your Role</h2>\r\n      <button className=\"m-4 p-2 bg-blue-500 text-white\" onClick={() => handleRoleSelection(\"admin\")}>\r\n        Admin\r\n      </button>\r\n      <button className=\"m-4 p-2 bg-green-500 text-white\" onClick={() => handleRoleSelection(\"student\")}>\r\n        Student\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectRole;\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,mBAAmB,GAAG,MAAOC,IAAI,IAAK;IAC1C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER;QAAK,CAAC;MAC/B,CAAC,CAAC;MAEF,MAAMS,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;MAC7B,IAAIT,GAAG,CAACU,EAAE,EAAE;QACVb,QAAQ,CAACE,IAAI,KAAK,OAAO,GAAG,YAAY,GAAG,OAAO,CAAC;MACrD,CAAC,MAAM;QACLY,KAAK,CAACH,IAAI,CAACI,KAAK,CAAC;MACnB;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,KAAK,CAAC,oBAAoB,CAAC;IAC7B;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,wDAAwD;IAAAC,QAAA,gBACrEpB,OAAA;MAAImB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDxB,OAAA;MAAQmB,SAAS,EAAC,gCAAgC;MAACM,OAAO,EAAEA,CAAA,KAAMrB,mBAAmB,CAAC,OAAO,CAAE;MAAAgB,QAAA,EAAC;IAEhG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxB,OAAA;MAAQmB,SAAS,EAAC,iCAAiC;MAACM,OAAO,EAAEA,CAAA,KAAMrB,mBAAmB,CAAC,SAAS,CAAE;MAAAgB,QAAA,EAAC;IAEnG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CAlCQD,UAAU;EAAA,QACAH,WAAW;AAAA;AAAA4B,EAAA,GADrBzB,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}