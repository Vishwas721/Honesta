{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\n\n// Initialize socket.io client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:3001\");\nconst ExamPage = ({\n  studentName,\n  studentEmail,\n  testName\n}) => {\n  _s();\n  var _questions$currentQue, _questions$currentQue2, _questions$currentQue3;\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [timer, setTimer] = useState(3600); // Example: 1 hour in seconds\n  const [loading, setLoading] = useState(true);\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\n\n  // Start the exam when the page loads\n  useEffect(() => {\n    const startExam = async () => {\n      try {\n        await axios.post(\"http://localhost:3001/start-exam\", {\n          studentName,\n          studentEmail,\n          testName,\n          examId\n        });\n      } catch (error) {\n        console.error(\"Error starting exam:\", error);\n      }\n    };\n    startExam();\n    {\n      withCredentials: true;\n    }\n    // Set up risk alerts via socket\n    socket.on(\"risk_alert\", alert => {\n      setAlerts(prevAlerts => [...prevAlerts, alert]);\n    });\n    return () => {\n      socket.off(\"risk_alert\");\n    };\n  }, [studentName, studentEmail, testName, examId]);\n\n  // Fetch questions for the exam\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/get-exam-questions/${examId}`, {\n          withCredentials: true\n        });\n        setQuestions(response.data.questions);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n        navigate(\"/exam-selection\");\n      }\n    };\n    fetchQuestions();\n  }, [examId, navigate]);\n\n  // Timer functionality\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prev => prev > 0 ? prev - 1 : 0);\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, []);\n\n  // Handle moving to the next question\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n      setSelectedOption(null); // Reset option for the next question\n    } else {\n      setIsExamCompleted(true);\n    }\n  };\n\n  // Handle moving to the previous question\n  const handlePreviousQuestion = () => {\n    setCurrentQuestion(prev => prev > 0 ? prev - 1 : 0);\n  };\n\n  // Handle option selection\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary\",\n        children: [\"Exam: \", testName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger h4\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (\"0\" + timer % 60).slice(-2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : isExamCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-success\",\n        children: \"Congratulations!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have completed the exam.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => navigate(\"/exam-selection\"),\n        children: \"Go Back to Exam Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Q\", currentQuestion + 1, \": \", (_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: ((_questions$currentQue2 = questions[currentQuestion]) === null || _questions$currentQue2 === void 0 ? void 0 : (_questions$currentQue3 = _questions$currentQue2.options) === null || _questions$currentQue3 === void 0 ? void 0 : _questions$currentQue3.length) > 0 ? questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"questionOption\",\n            id: `option-${index}`,\n            value: option,\n            checked: selectedOption === option,\n            onChange: () => handleOptionChange(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: \"No options available for this question.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          disabled: currentQuestion === 0,\n          onClick: handlePreviousQuestion,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNextQuestion,\n          disabled: currentQuestion >= questions.length - 1,\n          children: currentQuestion === questions.length - 1 ? \"Finish\" : \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-danger\",\n        children: \"Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), alerts.length > 0 ? alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: alert.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"Rmon1TROBIf31Gk1fAvmfNn2IOI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","io","axios","jsxDEV","_jsxDEV","socket","ExamPage","studentName","studentEmail","testName","_s","_questions$currentQue","_questions$currentQue2","_questions$currentQue3","examId","navigate","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","alerts","setAlerts","timer","setTimer","loading","setLoading","isExamCompleted","setIsExamCompleted","startExam","post","error","console","withCredentials","on","alert","prevAlerts","off","fetchQuestions","response","get","data","countdown","setInterval","prev","clearInterval","handleNextQuestion","length","handlePreviousQuestion","handleOptionChange","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Math","floor","slice","onClick","text","options","map","index","type","name","id","value","checked","onChange","htmlFor","disabled","message","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\n// Initialize socket.io client\r\nconst socket = io(\"http://localhost:3001\");\r\n\r\nconst ExamPage = ({ studentName, studentEmail, testName }) => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [timer, setTimer] = useState(3600); // Example: 1 hour in seconds\r\n  const [loading, setLoading] = useState(true);\r\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\r\n\r\n  // Start the exam when the page loads\r\n  useEffect(() => {\r\n    const startExam = async () => {\r\n      try {\r\n        await axios.post(\"http://localhost:3001/start-exam\", {\r\n          studentName,\r\n          studentEmail,\r\n          testName,\r\n          examId,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error starting exam:\", error);\r\n      }\r\n    };\r\n\r\n    startExam();\r\n    { withCredentials: true } \r\n    // Set up risk alerts via socket\r\n    socket.on(\"risk_alert\", (alert) => {\r\n      setAlerts((prevAlerts) => [...prevAlerts, alert]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"risk_alert\");\r\n    };\r\n  }, [studentName, studentEmail, testName, examId]);\r\n\r\n  // Fetch questions for the exam\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/get-exam-questions/${examId}`,\r\n          { withCredentials: true }\r\n        );\r\n        setQuestions(response.data.questions);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching questions:\", error);\r\n        navigate(\"/exam-selection\");\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [examId, navigate]);\r\n\r\n  // Timer functionality\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => (prev > 0 ? prev - 1 : 0));\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown);\r\n  }, []);\r\n\r\n  // Handle moving to the next question\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion((prev) => prev + 1);\r\n      setSelectedOption(null); // Reset option for the next question\r\n    } else {\r\n      setIsExamCompleted(true);\r\n    }\r\n  };\r\n\r\n  // Handle moving to the previous question\r\n  const handlePreviousQuestion = () => {\r\n    setCurrentQuestion((prev) => (prev > 0 ? prev - 1 : 0));\r\n  };\r\n\r\n  // Handle option selection\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {/* Timer and Header */}\r\n      <header className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1 className=\"text-primary\">Exam: {testName}</h1>\r\n        <div className=\"text-danger h4\">\r\n          Time Left: {Math.floor(timer / 60)}:{(\"0\" + (timer % 60)).slice(-2)}\r\n        </div>\r\n      </header>\r\n\r\n      {loading ? (\r\n        <p>Loading questions...</p>\r\n      ) : isExamCompleted ? (\r\n        <div className=\"card shadow-lg p-4 text-center\">\r\n          <h2 className=\"text-success\">Congratulations!</h2>\r\n          <p>You have completed the exam.</p>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => navigate(\"/exam-selection\")}\r\n          >\r\n            Go Back to Exam Selection\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"card shadow-lg p-4\">\r\n          {/* Current Question */}\r\n          <h4 className=\"card-title\">\r\n            Q{currentQuestion + 1}: {questions[currentQuestion]?.text}\r\n          </h4>\r\n\r\n<div className=\"mt-3\">\r\n    {questions[currentQuestion]?.options?.length > 0 ? (\r\n      questions[currentQuestion].options.map((option, index) => (\r\n        <div key={index} className=\"form-check\">\r\n          <input\r\n          className=\"form-check-input\"\r\n          type=\"radio\"\r\n          name=\"questionOption\"\r\n          id={`option-${index}`}\r\n          value={option}\r\n          checked={selectedOption === option}\r\n          onChange={() => handleOptionChange(option)}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor={`option-${index}`}>\r\n          {option}\r\n        </label>\r\n    </div>\r\n    ))\r\n  ) : (\r\n    <p className=\"text-danger\">No options available for this question.</p>\r\n  )}\r\n</div>\r\n\r\n\r\n          {/* Navigation Buttons */}\r\n          <div className=\"mt-4 d-flex justify-content-between\">\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              disabled={currentQuestion === 0}\r\n              onClick={handlePreviousQuestion}\r\n            >\r\n              Previous\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={handleNextQuestion}\r\n              disabled={currentQuestion >= questions.length - 1}\r\n            >\r\n              {currentQuestion === questions.length - 1 ? \"Finish\" : \"Next\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Risk Alerts */}\r\n      <div className=\"mt-4\">\r\n        <h5 className=\"text-danger\">Alerts</h5>\r\n        {alerts.length > 0 ? (\r\n          alerts.map((alert, index) => (\r\n            <div key={index} className=\"alert alert-danger\">\r\n              {alert.message}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No alerts</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}