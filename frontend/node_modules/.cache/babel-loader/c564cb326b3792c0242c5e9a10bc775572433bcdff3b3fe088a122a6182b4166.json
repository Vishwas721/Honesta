{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\GenerateQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenerateQuestions = () => {\n  _s();\n  const [topic, setTopic] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [numberOfQuestions, setNumberOfQuestions] = useState(1);\n  const [questions, setQuestions] = useState([]);\n  const handleGenerate = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/generate-questions\", {\n        topic,\n        difficulty,\n        numberOfQuestions\n      }, {\n        withCredentials: true\n      }); // Ensure credentials are included\n      setQuestions(response.data.questions);\n    } catch (error) {\n      console.error(\"Error generating questions:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate AI-Powered Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Topic\",\n      value: topic,\n      onChange: e => setTopic(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Difficulty\",\n      value: difficulty,\n      onChange: e => setDifficulty(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Number of Questions\",\n      value: numberOfQuestions,\n      onChange: e => setNumberOfQuestions(parseInt(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      children: \"Generate Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(GenerateQuestions, \"IgWuMqukGwWSA6d9M5LPMXQ8Zg0=\");\n_c = GenerateQuestions;\nexport default GenerateQuestions;\nvar _c;\n$RefreshReg$(_c, \"GenerateQuestions\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GenerateQuestions","_s","topic","setTopic","difficulty","setDifficulty","numberOfQuestions","setNumberOfQuestions","questions","setQuestions","handleGenerate","response","post","withCredentials","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","parseInt","onClick","map","question","index","text","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/GenerateQuestions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GenerateQuestions = () => {\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [difficulty, setDifficulty] = useState(\"\");\r\n  const [numberOfQuestions, setNumberOfQuestions] = useState(1);\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const handleGenerate = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3001/generate-questions\", {\r\n        topic,\r\n        difficulty,\r\n        numberOfQuestions,\r\n      }, { withCredentials: true }); // Ensure credentials are included\r\n      setQuestions(response.data.questions);\r\n    } catch (error) {\r\n      console.error(\"Error generating questions:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Generate AI-Powered Questions</h2>\r\n      <input type=\"text\" placeholder=\"Topic\" value={topic} onChange={(e) => setTopic(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Difficulty\" value={difficulty} onChange={(e) => setDifficulty(e.target.value)} />\r\n      <input type=\"number\" placeholder=\"Number of Questions\" value={numberOfQuestions} onChange={(e) => setNumberOfQuestions(parseInt(e.target.value))} />\r\n      <button onClick={handleGenerate}>Generate Questions</button>\r\n      <div>\r\n        {questions.map((question, index) => (\r\n          <div key={index}>\r\n            <p>{question.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateQuestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}