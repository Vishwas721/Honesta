{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = () => {\n  _s();\n  var _currentQ$options;\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(3600); // 1-hour timer\n  const [warningMessage, setWarningMessage] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:3001\", {\n      withCredentials: true // Ensure cookies are sent for session-based authentication\n    });\n    setSocket(newSocket);\n    newSocket.on(\"connect\", () => {\n      console.log(\"Connected to WebSocket server:\", newSocket.id);\n    });\n    newSocket.on(\"risk_warning\", data => {\n      setWarningMessage(data.message);\n      setTimeout(() => setWarningMessage(null), 5000);\n    });\n    newSocket.on(\"lock_exam\", data => {\n      alert(data.message);\n      navigate(\"/exam-selection\");\n    });\n    return () => {\n      newSocket.disconnect(); // Cleanup WebSocket connection on component unmount\n    };\n  }, [navigate]);\n\n  // Fetch exam questions\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/exams/${examId}/questions`, {\n          withCredentials: true\n        });\n        setQuestions(response.data.questions);\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error fetching questions:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert(\"Failed to load exam questions. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [examId]);\n\n  // Timer countdown logic\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(countdown);\n          handleSubmitExam(); // Auto-submit when the timer ends\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown); // Cleanup on unmount\n  }, []);\n\n  // Centralized emit function for WebSocket events\n  const emitEvent = (eventName, data) => {\n    if (socket && examId) {\n      const studentId = sessionStorage.getItem(\"studentId\"); // Dynamically retrieve studentId\n      if (studentId) {\n        socket.emit(eventName, {\n          ...data,\n          examId,\n          studentId,\n          timestamp: Date.now()\n        });\n      } else {\n        console.error(\"Student ID is missing from session.\");\n      }\n    } else {\n      console.error(`Failed to emit ${eventName}: socket or examId is undefined.`);\n    }\n  };\n\n  // Emit mouse activity\n  useEffect(() => {\n    const handleMouseMove = e => emitEvent(\"mouse_activity\", {\n      x: e.clientX,\n      y: e.clientY\n    });\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n  }, [socket, examId]);\n\n  // Emit keystroke activity\n  useEffect(() => {\n    const handleKeyDown = e => emitEvent(\"keystroke_activity\", {\n      key: e.key\n    });\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [socket, examId]);\n\n  // Emit tab change activity\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === \"hidden\") {\n        emitEvent(\"tab_change\", {\n          action: \"Tab switched\"\n        });\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, [socket, examId]);\n\n  // Handle answer selection\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n    // Save the selected answer for the current question\n    setAnswers(prev => {\n      const updatedAnswers = [...prev];\n      updatedAnswers[currentQuestion] = {\n        questionId: questions[currentQuestion].id,\n        answer: option\n      };\n      return updatedAnswers;\n    });\n  };\n\n  // Handle navigation to the next question or submit the exam\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedOption(null); // Reset selected option\n    } else {\n      handleSubmitExam(); // Submit when on the last question\n    }\n  };\n\n  // Submit the exam to the backend\n  const handleSubmitExam = async () => {\n    try {\n      setLoading(true);\n\n      // Ensure all questions are answered before submitting\n      if (answers.length !== questions.length) {\n        alert(\"Please answer all questions before submitting.\");\n        setLoading(false);\n        return;\n      }\n      const studentId = sessionStorage.getItem(\"studentId\"); // Retrieve studentId dynamically\n      if (!studentId) {\n        alert(\"Authentication error. Please log in again.\");\n        setLoading(false);\n        return;\n      }\n      const payload = {\n        examId,\n        studentId,\n        answers\n      };\n      console.log(\"Submitting exam payload:\", payload);\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\n        withCredentials: true\n      });\n      const results = response.data.results;\n      alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\n      navigate(\"/results\", {\n        state: {\n          results\n        }\n      });\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error submitting the exam:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      if (error.response) {\n        alert(`Failed to submit the exam: ${error.response.data.error || \"Unknown error occurred.\"}`);\n      } else {\n        alert(\"An unexpected error occurred. Please check your connection and try again.\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQ = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [warningMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning text-center\",\n      role: \"alert\",\n      children: warningMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary\",\n        children: \"Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger h4\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (\"0\" + timer % 60).slice(-2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), currentQ ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Q\", currentQuestion + 1, \": \", currentQ.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: (_currentQ$options = currentQ.options) === null || _currentQ$options === void 0 ? void 0 : _currentQ$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: `question-${currentQuestion}`,\n            id: `option-${index}`,\n            value: option,\n            onChange: () => handleOptionChange(option),\n            checked: selectedOption === option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-4\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null,\n        children: currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No more questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"GOlx4vh4kKAM4jCLUsy6I6ENFQA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","jsxDEV","_jsxDEV","ExamPage","_s","_currentQ$options","examId","navigate","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","answers","setAnswers","loading","setLoading","timer","setTimer","warningMessage","setWarningMessage","socket","setSocket","newSocket","withCredentials","on","console","log","id","data","message","setTimeout","alert","disconnect","fetchQuestions","response","get","error","_error$response","countdown","setInterval","prev","clearInterval","handleSubmitExam","emitEvent","eventName","studentId","sessionStorage","getItem","emit","timestamp","Date","now","handleMouseMove","e","x","clientX","y","clientY","window","addEventListener","removeEventListener","handleKeyDown","key","handleVisibilityChange","document","visibilityState","action","handleOptionChange","option","updatedAnswers","questionId","answer","handleNextQuestion","length","payload","post","results","score","totalQuestions","state","_error$response2","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQ","className","role","Math","floor","slice","text","options","map","index","type","name","value","onChange","checked","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst ExamPage = () => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timer, setTimer] = useState(3600); // 1-hour timer\r\n  const [warningMessage, setWarningMessage] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:3001\", {\r\n      withCredentials: true, // Ensure cookies are sent for session-based authentication\r\n    });\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"Connected to WebSocket server:\", newSocket.id);\r\n    });\r\n\r\n    newSocket.on(\"risk_warning\", (data) => {\r\n      setWarningMessage(data.message);\r\n      setTimeout(() => setWarningMessage(null), 5000);\r\n    });\r\n\r\n    newSocket.on(\"lock_exam\", (data) => {\r\n      alert(data.message);\r\n      navigate(\"/exam-selection\");\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect(); // Cleanup WebSocket connection on component unmount\r\n    };\r\n  }, [navigate]);\r\n\r\n  // Fetch exam questions\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3001/exams/${examId}/questions`, {\r\n          withCredentials: true,\r\n        });\r\n        setQuestions(response.data.questions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching questions:\", error.response?.data || error.message);\r\n        alert(\"Failed to load exam questions. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [examId]);\r\n\r\n  // Timer countdown logic\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(countdown);\r\n          handleSubmitExam(); // Auto-submit when the timer ends\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown); // Cleanup on unmount\r\n  }, []);\r\n\r\n  // Centralized emit function for WebSocket events\r\n  const emitEvent = (eventName, data) => {\r\n    if (socket && examId) {\r\n      const studentId = sessionStorage.getItem(\"studentId\"); // Dynamically retrieve studentId\r\n      if (studentId) {\r\n        socket.emit(eventName, { ...data, examId, studentId, timestamp: Date.now() });\r\n      } else {\r\n        console.error(\"Student ID is missing from session.\");\r\n      }\r\n    } else {\r\n      console.error(`Failed to emit ${eventName}: socket or examId is undefined.`);\r\n    }\r\n  };\r\n\r\n  // Emit mouse activity\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => emitEvent(\"mouse_activity\", { x: e.clientX, y: e.clientY });\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove);\r\n  }, [socket, examId]);\r\n\r\n  // Emit keystroke activity\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => emitEvent(\"keystroke_activity\", { key: e.key });\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [socket, examId]);\r\n\r\n  // Emit tab change activity\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === \"hidden\") {\r\n        emitEvent(\"tab_change\", { action: \"Tab switched\" });\r\n      }\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n  }, [socket, examId]);\r\n\r\n  // Handle answer selection\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n    // Save the selected answer for the current question\r\n    setAnswers((prev) => {\r\n      const updatedAnswers = [...prev];\r\n      updatedAnswers[currentQuestion] = {\r\n        questionId: questions[currentQuestion].id,\r\n        answer: option,\r\n      };\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  // Handle navigation to the next question or submit the exam\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedOption(null); // Reset selected option\r\n    } else {\r\n      handleSubmitExam(); // Submit when on the last question\r\n    }\r\n  };\r\n\r\n  // Submit the exam to the backend\r\n  const handleSubmitExam = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Ensure all questions are answered before submitting\r\n      if (answers.length !== questions.length) {\r\n        alert(\"Please answer all questions before submitting.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const studentId = sessionStorage.getItem(\"studentId\"); // Retrieve studentId dynamically\r\n      if (!studentId) {\r\n        alert(\"Authentication error. Please log in again.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        examId,\r\n        studentId,\r\n        answers,\r\n      };\r\n\r\n      console.log(\"Submitting exam payload:\", payload);\r\n\r\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\r\n        withCredentials: true,\r\n      });\r\n\r\n      const results = response.data.results;\r\n      alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\r\n      navigate(\"/results\", { state: { results } });\r\n    } catch (error) {\r\n      console.error(\"Error submitting the exam:\", error.response?.data || error.message);\r\n      if (error.response) {\r\n        alert(`Failed to submit the exam: ${error.response.data.error || \"Unknown error occurred.\"}`);\r\n      } else {\r\n        alert(\"An unexpected error occurred. Please check your connection and try again.\");\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading questions...</p>;\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return <p>No questions available for this exam.</p>;\r\n  }\r\n\r\n  const currentQ = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {warningMessage && (\r\n        <div className=\"alert alert-warning text-center\" role=\"alert\">\r\n          {warningMessage}\r\n        </div>\r\n      )}\r\n\r\n      <header className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1 className=\"text-primary\">Exam</h1>\r\n        <div className=\"text-danger h4\">\r\n          Time Left: {Math.floor(timer / 60)}:{(\"0\" + (timer % 60)).slice(-2)}\r\n        </div>\r\n      </header>\r\n\r\n      {currentQ ? (\r\n        <div className=\"card shadow-lg p-4\">\r\n          <h4 className=\"card-title\">\r\n            Q{currentQuestion + 1}: {currentQ.text}\r\n          </h4>\r\n          <div className=\"mt-3\">\r\n            {currentQ.options?.map((option, index) => (\r\n              <div key={index} className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestion}`}\r\n                  id={`option-${index}`}\r\n                  value={option}\r\n                  onChange={() => handleOptionChange(option)}\r\n                  checked={selectedOption === option}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`option-${index}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-4\"\r\n            onClick={handleNextQuestion}\r\n            disabled={selectedOption === null}\r\n          >\r\n            {currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>No more questions available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}