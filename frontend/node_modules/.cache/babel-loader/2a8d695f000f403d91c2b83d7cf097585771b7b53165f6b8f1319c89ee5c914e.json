{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = () => {\n  _s();\n  var _currentQ$options;\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(3600); // 1-hour timer\n  const [warningMessage, setWarningMessage] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  // Real-time metrics\n  const [metrics, setMetrics] = useState({\n    mouse_speed: 0,\n    key_press_intervals: 0,\n    tab_switch_frequency: 0\n  });\n  const [lastKeyPressTime, setLastKeyPressTime] = useState(Date.now());\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:3001\");\n    setSocket(newSocket);\n    newSocket.on(\"connect\", () => {\n      console.log(\"Connected to WebSocket server:\", newSocket.id);\n    });\n    newSocket.on(\"risk_warning\", data => {\n      setWarningMessage(data.message);\n      setTimeout(() => setWarningMessage(null), 5000);\n    });\n    newSocket.on(\"lock_exam\", data => {\n      alert(data.message);\n      navigate(\"/exam-selection\");\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [navigate]);\n\n  // Fetch exam questions\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/exams/${examId}/questions`, {\n          withCredentials: true\n        });\n        setQuestions(response.data.questions);\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error fetching questions:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert(\"Failed to load exam questions.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [examId]);\n\n  // Timer countdown logic\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(countdown);\n          handleSubmitExam(); // Auto-submit when the timer ends\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown); // Cleanup on unmount\n  }, []);\n\n  // Emit mouse movement\n  useEffect(() => {\n    const handleMouseMove = e => {\n      const mouseSpeed = Math.sqrt(e.movementX ** 2 + e.movementY ** 2);\n      setMetrics(prev => ({\n        ...prev,\n        mouse_speed: (prev.mouse_speed + mouseSpeed) / 2 // Average speed\n      }));\n    };\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n  }, []);\n\n  // Emit keystroke activity\n  useEffect(() => {\n    const handleKeyDown = () => {\n      const currentTime = Date.now();\n      const interval = currentTime - lastKeyPressTime;\n      setLastKeyPressTime(currentTime);\n      setMetrics(prev => ({\n        ...prev,\n        key_press_intervals: (prev.key_press_intervals + interval) / 2 // Average interval\n      }));\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [lastKeyPressTime]);\n\n  // Emit tab change activity\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === \"hidden\") {\n        setMetrics(prev => ({\n          ...prev,\n          tab_switch_frequency: prev.tab_switch_frequency + 1 // Increment tab switches\n        }));\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, []);\n\n  // Send metrics to Flask API for prediction\n  useEffect(() => {\n    const sendMetricsForPrediction = async () => {\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/predict\", metrics, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const riskLevel = response.data.risk_level;\n        console.log(\"Predicted Risk Level:\", riskLevel);\n\n        // Trigger warnings or alerts based on risk level\n        if (riskLevel === \"high\") {\n          setWarningMessage(\"High-risk behavior detected. Stay focused!\");\n        } else if (riskLevel === \"medium\") {\n          setWarningMessage(\"Medium-risk behavior detected. Please focus.\");\n        }\n      } catch (error) {\n        var _error$response2;\n        console.error(\"Error sending metrics for prediction:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      }\n    };\n\n    // Periodically send metrics every 5 seconds\n    const interval = setInterval(() => {\n      sendMetricsForPrediction();\n    }, 5000);\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, [metrics]);\n  const handleSubmitExam = async () => {\n    try {\n      setLoading(true);\n      if (answers.length !== questions.length) {\n        alert(\"Please answer all questions before submitting.\");\n        setLoading(false);\n        return;\n      }\n      const payload = {\n        examId,\n        studentId: 1,\n        // Replace with actual studentId from authentication logic\n        answers\n      };\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\n        withCredentials: true\n      });\n      const results = response.data.results;\n      alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\n      navigate(\"/results\", {\n        state: {\n          results\n        }\n      });\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Error submitting the exam:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      alert(\"An unexpected error occurred. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQ = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [warningMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning text-center\",\n      role: \"alert\",\n      children: warningMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary\",\n        children: \"Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger h4\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (\"0\" + timer % 60).slice(-2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), currentQ ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Q\", currentQuestion + 1, \": \", currentQ.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: (_currentQ$options = currentQ.options) === null || _currentQ$options === void 0 ? void 0 : _currentQ$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: `question-${currentQuestion}`,\n            id: `option-${index}`,\n            value: option.trim() // Trim any extra spaces in the option\n            ,\n            onChange: () => handleOptionChange(option.trim()) // Update selected option\n            ,\n            checked: selectedOption === option.trim()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-4\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null // Disable button until an option is selected\n        ,\n        children: currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No more questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"EHgqZv5bqgElI0Vqhs1sTw4wNxo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","jsxDEV","_jsxDEV","ExamPage","_s","_currentQ$options","examId","navigate","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","answers","setAnswers","loading","setLoading","timer","setTimer","warningMessage","setWarningMessage","socket","setSocket","metrics","setMetrics","mouse_speed","key_press_intervals","tab_switch_frequency","lastKeyPressTime","setLastKeyPressTime","Date","now","newSocket","on","console","log","id","data","message","setTimeout","alert","disconnect","fetchQuestions","response","get","withCredentials","error","_error$response","countdown","setInterval","prev","clearInterval","handleSubmitExam","handleMouseMove","e","mouseSpeed","Math","sqrt","movementX","movementY","window","addEventListener","removeEventListener","handleKeyDown","currentTime","interval","handleVisibilityChange","document","visibilityState","sendMetricsForPrediction","post","headers","riskLevel","risk_level","_error$response2","length","payload","studentId","results","score","totalQuestions","state","_error$response3","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQ","className","role","floor","slice","text","options","map","option","index","type","name","value","trim","onChange","handleOptionChange","checked","htmlFor","onClick","handleNextQuestion","disabled","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst ExamPage = () => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timer, setTimer] = useState(3600); // 1-hour timer\r\n  const [warningMessage, setWarningMessage] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  // Real-time metrics\r\n  const [metrics, setMetrics] = useState({\r\n    mouse_speed: 0,\r\n    key_press_intervals: 0,\r\n    tab_switch_frequency: 0,\r\n  });\r\n  const [lastKeyPressTime, setLastKeyPressTime] = useState(Date.now());\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:3001\");\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"Connected to WebSocket server:\", newSocket.id);\r\n    });\r\n\r\n    newSocket.on(\"risk_warning\", (data) => {\r\n      setWarningMessage(data.message);\r\n      setTimeout(() => setWarningMessage(null), 5000);\r\n    });\r\n\r\n    newSocket.on(\"lock_exam\", (data) => {\r\n      alert(data.message);\r\n      navigate(\"/exam-selection\");\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, [navigate]);\r\n\r\n  // Fetch exam questions\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/exams/${examId}/questions`,\r\n          { withCredentials: true }\r\n        );\r\n        setQuestions(response.data.questions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching questions:\", error.response?.data || error.message);\r\n        alert(\"Failed to load exam questions.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [examId]);\r\n\r\n  // Timer countdown logic\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(countdown);\r\n          handleSubmitExam(); // Auto-submit when the timer ends\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown); // Cleanup on unmount\r\n  }, []);\r\n\r\n  // Emit mouse movement\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      const mouseSpeed = Math.sqrt(e.movementX ** 2 + e.movementY ** 2);\r\n      setMetrics((prev) => ({\r\n        ...prev,\r\n        mouse_speed: (prev.mouse_speed + mouseSpeed) / 2, // Average speed\r\n      }));\r\n    };\r\n    window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove);\r\n  }, []);\r\n\r\n  // Emit keystroke activity\r\n  useEffect(() => {\r\n    const handleKeyDown = () => {\r\n      const currentTime = Date.now();\r\n      const interval = currentTime - lastKeyPressTime;\r\n      setLastKeyPressTime(currentTime);\r\n\r\n      setMetrics((prev) => ({\r\n        ...prev,\r\n        key_press_intervals: (prev.key_press_intervals + interval) / 2, // Average interval\r\n      }));\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  }, [lastKeyPressTime]);\r\n\r\n  // Emit tab change activity\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === \"hidden\") {\r\n        setMetrics((prev) => ({\r\n          ...prev,\r\n          tab_switch_frequency: prev.tab_switch_frequency + 1, // Increment tab switches\r\n        }));\r\n      }\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n  }, []);\r\n\r\n  // Send metrics to Flask API for prediction\r\n  useEffect(() => {\r\n    const sendMetricsForPrediction = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:5000/predict\", metrics, {\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n\r\n        const riskLevel = response.data.risk_level;\r\n        console.log(\"Predicted Risk Level:\", riskLevel);\r\n\r\n        // Trigger warnings or alerts based on risk level\r\n        if (riskLevel === \"high\") {\r\n          setWarningMessage(\"High-risk behavior detected. Stay focused!\");\r\n        } else if (riskLevel === \"medium\") {\r\n          setWarningMessage(\"Medium-risk behavior detected. Please focus.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error sending metrics for prediction:\", error.response?.data || error.message);\r\n      }\r\n    };\r\n\r\n    // Periodically send metrics every 5 seconds\r\n    const interval = setInterval(() => {\r\n      sendMetricsForPrediction();\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval); // Cleanup interval on component unmount\r\n  }, [metrics]);\r\n\r\n  const handleSubmitExam = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (answers.length !== questions.length) {\r\n        alert(\"Please answer all questions before submitting.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        examId,\r\n        studentId: 1, // Replace with actual studentId from authentication logic\r\n        answers,\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\r\n        withCredentials: true,\r\n      });\r\n\r\n      const results = response.data.results;\r\n      alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\r\n      navigate(\"/results\", { state: { results } });\r\n    } catch (error) {\r\n      console.error(\"Error submitting the exam:\", error.response?.data || error.message);\r\n      alert(\"An unexpected error occurred. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading questions...</p>;\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return <p>No questions available for this exam.</p>;\r\n  }\r\n\r\n  const currentQ = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {/* Warning banner for risk activity */}\r\n      {warningMessage && (\r\n        <div className=\"alert alert-warning text-center\" role=\"alert\">\r\n          {warningMessage}\r\n        </div>\r\n      )}\r\n  \r\n      {/* Header Section */}\r\n      <header className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1 className=\"text-primary\">Exam</h1>\r\n        <div className=\"text-danger h4\">\r\n          Time Left: {Math.floor(timer / 60)}:{(\"0\" + (timer % 60)).slice(-2)}\r\n        </div>\r\n      </header>\r\n  \r\n      {/* Current Question Section */}\r\n      {currentQ ? (\r\n        <div className=\"card shadow-lg p-4\">\r\n          <h4 className=\"card-title\">\r\n            Q{currentQuestion + 1}: {currentQ.text}\r\n          </h4>\r\n          <div className=\"mt-3\">\r\n            {/* Render Options Dynamically */}\r\n            {currentQ.options?.map((option, index) => (\r\n              <div key={index} className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestion}`}\r\n                  id={`option-${index}`}\r\n                  value={option.trim()} // Trim any extra spaces in the option\r\n                  onChange={() => handleOptionChange(option.trim())} // Update selected option\r\n                  checked={selectedOption === option.trim()}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`option-${index}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n  \r\n          {/* Navigation Button */}\r\n          <button\r\n            className=\"btn btn-primary mt-4\"\r\n            onClick={handleNextQuestion}\r\n            disabled={selectedOption === null} // Disable button until an option is selected\r\n          >\r\n            {currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>No more questions available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}