{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport DynamicWatermark from \"./DynamicWatermark\"; // Import the DynamicWatermark component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = () => {\n  _s();\n  var _currentQ$options;\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(3600); // 1-hour timer\n  const [warningMessage, setWarningMessage] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const studentId = 1; // Replace with actual studentId from authentication\n  const userName = \"John Doe\"; // Replace with the actual userName (for demonstration)\n  const userID = \"john.doe@example.com\"; // Replace with the actual userID (for demonstration)\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:3001\");\n    setSocket(newSocket);\n    newSocket.on(\"connect\", () => {\n      console.log(\"Connected to WebSocket server:\", newSocket.id);\n    });\n    newSocket.on(\"risk_warning\", data => {\n      setWarningMessage(data.message);\n      setTimeout(() => setWarningMessage(null), 5000);\n    });\n    newSocket.on(\"lock_exam\", data => {\n      alert(data.message);\n      navigate(\"/exam-selection\");\n    });\n    return () => {\n      newSocket.disconnect(); // Cleanup on unmount\n    };\n  }, [navigate]);\n\n  // Emit events via WebSocket\n  const emitEvent = (eventName, data) => {\n    if (socket && examId && studentId) {\n      socket.emit(eventName, {\n        ...data,\n        examId,\n        studentId,\n        timestamp: Date.now()\n      });\n    } else {\n      console.error(`Failed to emit ${eventName}: Ensure socket, examId, and studentId are defined.`);\n    }\n  };\n\n  // Fetch exam questions\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/exams/${examId}/questions`, {\n          withCredentials: true\n        });\n        setQuestions(response.data.questions);\n        setLoading(false);\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error fetching questions:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert(\"Failed to load exam questions.\");\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [examId]);\n\n  // Timer countdown\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(countdown);\n          handleSubmitExam(); // Auto-submit exam when timer ends\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown); // Cleanup\n  }, []);\n\n  // Additional functionality (copy-paste detection, split-screen, etc.) remains as-is...\n\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n    setAnswers(prev => {\n      const updatedAnswers = [...prev];\n      updatedAnswers[currentQuestion] = {\n        questionId: questions[currentQuestion].id,\n        answer: option\n      };\n      return updatedAnswers;\n    });\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedOption(null); // Reset selected option\n    } else {\n      handleSubmitExam();\n    }\n  };\n  const handleSubmitExam = async () => {\n    try {\n      setLoading(true);\n      if (answers.length !== questions.length) {\n        alert(\"Please answer all questions before submitting.\");\n        setLoading(false);\n        return;\n      }\n      const payload = {\n        examId,\n        studentId,\n        answers\n      };\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\n        withCredentials: true\n      });\n      const results = response.data.results;\n      alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\n      navigate(\"/results\", {\n        state: {\n          results\n        }\n      });\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error submitting the exam:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      alert(\"Failed to submit the exam. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQ = questions[currentQuestion];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [warningMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning text-center\",\n      role: \"alert\",\n      children: warningMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary\",\n        children: \"Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger h4\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (\"0\" + timer % 60).slice(-2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), currentQ ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      style: {\n        position: \"relative\" // Relative position for the container\n      },\n      children: [/*#__PURE__*/_jsxDEV(DynamicWatermark, {\n        userName: userName,\n        userID: userID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Q\", currentQuestion + 1, \": \", currentQ.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: (_currentQ$options = currentQ.options) === null || _currentQ$options === void 0 ? void 0 : _currentQ$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: `question-${currentQuestion}`,\n            id: `option-${index}`,\n            value: option,\n            onChange: () => handleOptionChange(option),\n            checked: selectedOption === option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-4\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null,\n        children: currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No more questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"qfTosoTG+oL/kMIGOksnIj0Rwz8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","DynamicWatermark","jsxDEV","_jsxDEV","ExamPage","_s","_currentQ$options","examId","navigate","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","answers","setAnswers","loading","setLoading","timer","setTimer","warningMessage","setWarningMessage","socket","setSocket","studentId","userName","userID","newSocket","on","console","log","id","data","message","setTimeout","alert","disconnect","emitEvent","eventName","emit","timestamp","Date","now","error","fetchQuestions","response","get","withCredentials","_error$response","countdown","setInterval","prev","clearInterval","handleSubmitExam","handleOptionChange","option","updatedAnswers","questionId","answer","handleNextQuestion","length","payload","post","results","score","totalQuestions","state","_error$response2","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQ","className","role","Math","floor","slice","style","position","text","options","map","index","type","name","value","onChange","checked","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport DynamicWatermark from \"./DynamicWatermark\"; // Import the DynamicWatermark component\r\n\r\nconst ExamPage = () => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timer, setTimer] = useState(3600); // 1-hour timer\r\n  const [warningMessage, setWarningMessage] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  const studentId = 1; // Replace with actual studentId from authentication\r\n  const userName = \"John Doe\"; // Replace with the actual userName (for demonstration)\r\n  const userID = \"john.doe@example.com\"; // Replace with the actual userID (for demonstration)\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    const newSocket = io(\"http://localhost:3001\");\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on(\"connect\", () => {\r\n      console.log(\"Connected to WebSocket server:\", newSocket.id);\r\n    });\r\n\r\n    newSocket.on(\"risk_warning\", (data) => {\r\n      setWarningMessage(data.message);\r\n      setTimeout(() => setWarningMessage(null), 5000);\r\n    });\r\n\r\n    newSocket.on(\"lock_exam\", (data) => {\r\n      alert(data.message);\r\n      navigate(\"/exam-selection\");\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect(); // Cleanup on unmount\r\n    };\r\n  }, [navigate]);\r\n\r\n  // Emit events via WebSocket\r\n  const emitEvent = (eventName, data) => {\r\n    if (socket && examId && studentId) {\r\n      socket.emit(eventName, { ...data, examId, studentId, timestamp: Date.now() });\r\n    } else {\r\n      console.error(`Failed to emit ${eventName}: Ensure socket, examId, and studentId are defined.`);\r\n    }\r\n  };\r\n\r\n  // Fetch exam questions\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/exams/${examId}/questions`,\r\n          { withCredentials: true }\r\n        );\r\n        setQuestions(response.data.questions);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching questions:\", error.response?.data || error.message);\r\n        alert(\"Failed to load exam questions.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [examId]);\r\n\r\n  // Timer countdown\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(countdown);\r\n          handleSubmitExam(); // Auto-submit exam when timer ends\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown); // Cleanup\r\n  }, []);\r\n\r\n  // Additional functionality (copy-paste detection, split-screen, etc.) remains as-is...\r\n\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n    setAnswers((prev) => {\r\n      const updatedAnswers = [...prev];\r\n      updatedAnswers[currentQuestion] = {\r\n        questionId: questions[currentQuestion].id,\r\n        answer: option,\r\n      };\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedOption(null); // Reset selected option\r\n    } else {\r\n      handleSubmitExam();\r\n    }\r\n  };\r\n\r\n  const handleSubmitExam = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (answers.length !== questions.length) {\r\n        alert(\"Please answer all questions before submitting.\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        examId,\r\n        studentId,\r\n        answers,\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\r\n        withCredentials: true,\r\n      });\r\n\r\n      const results = response.data.results;\r\n      alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\r\n      navigate(\"/results\", { state: { results } });\r\n    } catch (error) {\r\n      console.error(\"Error submitting the exam:\", error.response?.data || error.message);\r\n      alert(\"Failed to submit the exam. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading questions...</p>;\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return <p>No questions available for this exam.</p>;\r\n  }\r\n\r\n  const currentQ = questions[currentQuestion];\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {/* Warning banner for risk activity */}\r\n      {warningMessage && (\r\n        <div className=\"alert alert-warning text-center\" role=\"alert\">\r\n          {warningMessage}\r\n        </div>\r\n      )}\r\n\r\n      <header className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1 className=\"text-primary\">Exam</h1>\r\n        <div className=\"text-danger h4\">\r\n          Time Left: {Math.floor(timer / 60)}:{(\"0\" + (timer % 60)).slice(-2)}\r\n        </div>\r\n      </header>\r\n\r\n      {currentQ ? (\r\n        <div\r\n          className=\"card shadow-lg p-4\"\r\n          style={{\r\n            position: \"relative\", // Relative position for the container\r\n          }}\r\n        >\r\n          {/* Watermark positioned relative to this container */}\r\n          <DynamicWatermark userName={userName} userID={userID} />\r\n\r\n          <h4 className=\"card-title\">\r\n            Q{currentQuestion + 1}: {currentQ.text}\r\n          </h4>\r\n          <div className=\"mt-3\">\r\n            {currentQ.options?.map((option, index) => (\r\n              <div key={index} className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestion}`}\r\n                  id={`option-${index}`}\r\n                  value={option}\r\n                  onChange={() => handleOptionChange(option)}\r\n                  checked={selectedOption === option}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`option-${index}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-4\"\r\n            onClick={handleNextQuestion}\r\n            disabled={selectedOption === null}\r\n          >\r\n            {currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>No more questions available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAM8B,SAAS,GAAG,CAAC,CAAC,CAAC;EACrB,MAAMC,QAAQ,GAAG,UAAU,CAAC,CAAC;EAC7B,MAAMC,MAAM,GAAG,sBAAsB,CAAC,CAAC;;EAEvC;EACA/B,SAAS,CAAC,MAAM;IACd,MAAMgC,SAAS,GAAG5B,EAAE,CAAC,uBAAuB,CAAC;IAC7CwB,SAAS,CAACI,SAAS,CAAC;IAEpBA,SAAS,CAACC,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,SAAS,CAACI,EAAE,CAAC;IAC7D,CAAC,CAAC;IAEFJ,SAAS,CAACC,EAAE,CAAC,cAAc,EAAGI,IAAI,IAAK;MACrCX,iBAAiB,CAACW,IAAI,CAACC,OAAO,CAAC;MAC/BC,UAAU,CAAC,MAAMb,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;IACjD,CAAC,CAAC;IAEFM,SAAS,CAACC,EAAE,CAAC,WAAW,EAAGI,IAAI,IAAK;MAClCG,KAAK,CAACH,IAAI,CAACC,OAAO,CAAC;MACnB1B,QAAQ,CAAC,iBAAiB,CAAC;IAC7B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXoB,SAAS,CAACS,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,CAAC7B,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM8B,SAAS,GAAGA,CAACC,SAAS,EAAEN,IAAI,KAAK;IACrC,IAAIV,MAAM,IAAIhB,MAAM,IAAIkB,SAAS,EAAE;MACjCF,MAAM,CAACiB,IAAI,CAACD,SAAS,EAAE;QAAE,GAAGN,IAAI;QAAE1B,MAAM;QAAEkB,SAAS;QAAEgB,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC,CAAC;IAC/E,CAAC,MAAM;MACLb,OAAO,CAACc,KAAK,CAAC,kBAAkBL,SAAS,qDAAqD,CAAC;IACjG;EACF,CAAC;;EAED;EACA3C,SAAS,CAAC,MAAM;IACd,MAAMiD,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM/C,KAAK,CAACgD,GAAG,CAC9B,+BAA+BxC,MAAM,YAAY,EACjD;UAAEyC,eAAe,EAAE;QAAK,CAC1B,CAAC;QACDtC,YAAY,CAACoC,QAAQ,CAACb,IAAI,CAACxB,SAAS,CAAC;QACrCS,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAO0B,KAAK,EAAE;QAAA,IAAAK,eAAA;QACdnB,OAAO,CAACc,KAAK,CAAC,2BAA2B,EAAE,EAAAK,eAAA,GAAAL,KAAK,CAACE,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBhB,IAAI,KAAIW,KAAK,CAACV,OAAO,CAAC;QACjFE,KAAK,CAAC,gCAAgC,CAAC;QACvClB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED2B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACtC,MAAM,CAAC,CAAC;;EAEZ;EACAX,SAAS,CAAC,MAAM;IACd,MAAMsD,SAAS,GAAGC,WAAW,CAAC,MAAM;MAClC/B,QAAQ,CAAEgC,IAAI,IAAK;QACjB,IAAIA,IAAI,IAAI,CAAC,EAAE;UACbC,aAAa,CAACH,SAAS,CAAC;UACxBI,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACtB;QACA,OAAOF,IAAI,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,SAAS,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,MAAMK,kBAAkB,GAAIC,MAAM,IAAK;IACrC1C,iBAAiB,CAAC0C,MAAM,CAAC;IACzBxC,UAAU,CAAEoC,IAAI,IAAK;MACnB,MAAMK,cAAc,GAAG,CAAC,GAAGL,IAAI,CAAC;MAChCK,cAAc,CAAC9C,eAAe,CAAC,GAAG;QAChC+C,UAAU,EAAEjD,SAAS,CAACE,eAAe,CAAC,CAACqB,EAAE;QACzC2B,MAAM,EAAEH;MACV,CAAC;MACD,OAAOC,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIjD,eAAe,GAAGF,SAAS,CAACoD,MAAM,GAAG,CAAC,EAAE;MAC1CjD,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;MACvCG,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACLwC,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC;EAED,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFpC,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAIH,OAAO,CAAC8C,MAAM,KAAKpD,SAAS,CAACoD,MAAM,EAAE;QACvCzB,KAAK,CAAC,gDAAgD,CAAC;QACvDlB,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;MAEA,MAAM4C,OAAO,GAAG;QACdvD,MAAM;QACNkB,SAAS;QACTV;MACF,CAAC;MAED,MAAM+B,QAAQ,GAAG,MAAM/C,KAAK,CAACgE,IAAI,CAAC,mCAAmC,EAAED,OAAO,EAAE;QAC9Ed,eAAe,EAAE;MACnB,CAAC,CAAC;MAEF,MAAMgB,OAAO,GAAGlB,QAAQ,CAACb,IAAI,CAAC+B,OAAO;MACrC5B,KAAK,CAAC,4CAA4C4B,OAAO,CAACC,KAAK,IAAID,OAAO,CAACE,cAAc,EAAE,CAAC;MAC5F1D,QAAQ,CAAC,UAAU,EAAE;QAAE2D,KAAK,EAAE;UAAEH;QAAQ;MAAE,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOpB,KAAK,EAAE;MAAA,IAAAwB,gBAAA;MACdtC,OAAO,CAACc,KAAK,CAAC,4BAA4B,EAAE,EAAAwB,gBAAA,GAAAxB,KAAK,CAACE,QAAQ,cAAAsB,gBAAA,uBAAdA,gBAAA,CAAgBnC,IAAI,KAAIW,KAAK,CAACV,OAAO,CAAC;MAClFE,KAAK,CAAC,8CAA8C,CAAC;IACvD,CAAC,SAAS;MACRlB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE;IACX,oBAAOd,OAAA;MAAAkE,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EAEA,IAAIhE,SAAS,CAACoD,MAAM,KAAK,CAAC,EAAE;IAC1B,oBAAO1D,OAAA;MAAAkE,QAAA,EAAG;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrD;EAEA,MAAMC,QAAQ,GAAGjE,SAAS,CAACE,eAAe,CAAC;EAE3C,oBACER,OAAA;IAAKwE,SAAS,EAAC,gBAAgB;IAAAN,QAAA,GAE5BhD,cAAc,iBACblB,OAAA;MAAKwE,SAAS,EAAC,iCAAiC;MAACC,IAAI,EAAC,OAAO;MAAAP,QAAA,EAC1DhD;IAAc;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CACN,eAEDtE,OAAA;MAAQwE,SAAS,EAAC,wDAAwD;MAAAN,QAAA,gBACxElE,OAAA;QAAIwE,SAAS,EAAC,cAAc;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCtE,OAAA;QAAKwE,SAAS,EAAC,gBAAgB;QAAAN,QAAA,GAAC,aACnB,EAACQ,IAAI,CAACC,KAAK,CAAC3D,KAAK,GAAG,EAAE,CAAC,EAAC,GAAC,EAAC,CAAC,GAAG,GAAIA,KAAK,GAAG,EAAG,EAAE4D,KAAK,CAAC,CAAC,CAAC,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAERC,QAAQ,gBACPvE,OAAA;MACEwE,SAAS,EAAC,oBAAoB;MAC9BK,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU,CAAE;MACxB,CAAE;MAAAZ,QAAA,gBAGFlE,OAAA,CAACF,gBAAgB;QAACyB,QAAQ,EAAEA,QAAS;QAACC,MAAM,EAAEA;MAAO;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExDtE,OAAA;QAAIwE,SAAS,EAAC,YAAY;QAAAN,QAAA,GAAC,GACxB,EAAC1D,eAAe,GAAG,CAAC,EAAC,IAAE,EAAC+D,QAAQ,CAACQ,IAAI;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACLtE,OAAA;QAAKwE,SAAS,EAAC,MAAM;QAAAN,QAAA,GAAA/D,iBAAA,GAClBoE,QAAQ,CAACS,OAAO,cAAA7E,iBAAA,uBAAhBA,iBAAA,CAAkB8E,GAAG,CAAC,CAAC5B,MAAM,EAAE6B,KAAK,kBACnClF,OAAA;UAAiBwE,SAAS,EAAC,YAAY;UAAAN,QAAA,gBACrClE,OAAA;YACEwE,SAAS,EAAC,kBAAkB;YAC5BW,IAAI,EAAC,OAAO;YACZC,IAAI,EAAE,YAAY5E,eAAe,EAAG;YACpCqB,EAAE,EAAE,UAAUqD,KAAK,EAAG;YACtBG,KAAK,EAAEhC,MAAO;YACdiC,QAAQ,EAAEA,CAAA,KAAMlC,kBAAkB,CAACC,MAAM,CAAE;YAC3CkC,OAAO,EAAE7E,cAAc,KAAK2C;UAAO;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACFtE,OAAA;YAAOwE,SAAS,EAAC,kBAAkB;YAACgB,OAAO,EAAE,UAAUN,KAAK,EAAG;YAAAhB,QAAA,EAC5Db;UAAM;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA,GAZAY,KAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNtE,OAAA;QACEwE,SAAS,EAAC,sBAAsB;QAChCiB,OAAO,EAAEhC,kBAAmB;QAC5BiC,QAAQ,EAAEhF,cAAc,KAAK,IAAK;QAAAwD,QAAA,EAEjC1D,eAAe,KAAKF,SAAS,CAACoD,MAAM,GAAG,CAAC,GAAG,aAAa,GAAG;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBAENtE,OAAA;MAAAkE,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpE,EAAA,CAhNID,QAAQ;EAAA,QACOP,SAAS,EACXC,WAAW;AAAA;AAAAgG,EAAA,GAFxB1F,QAAQ;AAkNd,eAAeA,QAAQ;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}