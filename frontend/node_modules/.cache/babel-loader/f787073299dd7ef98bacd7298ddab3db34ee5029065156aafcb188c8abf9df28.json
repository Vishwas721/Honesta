{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\DynamicWatermark.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicWatermark = ({\n  userName,\n  userID\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      // Positioned relative to parent (e.g., question-answer container)\n      top: \"50%\",\n      // Center vertically within the container\n      left: \"50%\",\n      // Center horizontally within the container\n      transform: \"translate(-50%, -50%)\",\n      // Adjust for proper centering\n      opacity: 0.2,\n      // Semi-transparent\n      fontSize: \"20px\",\n      // Adjust font size as needed\n      color: \"black\",\n      // Font color\n      pointerEvents: \"none\",\n      // Prevent user interaction with the watermark\n      transformStyle: \"preserve-3d\",\n      // Keeps rotation smooth\n      zIndex: 9999,\n      // Ensures it's above other elements\n      userSelect: \"none\",\n      // Prevent text selection\n      textAlign: \"center\" // Align text in the center\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User: \", userName, \" | ID: \", userID, \" | \", new Date().toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = DynamicWatermark;\nexport default DynamicWatermark;\nvar _c;\n$RefreshReg$(_c, \"DynamicWatermark\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DynamicWatermark","userName","userID","style","position","top","left","transform","opacity","fontSize","color","pointerEvents","transformStyle","zIndex","userSelect","textAlign","children","Date","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/DynamicWatermark.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst DynamicWatermark = ({ userName, userID }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\", // Positioned relative to parent (e.g., question-answer container)\r\n        top: \"50%\", // Center vertically within the container\r\n        left: \"50%\", // Center horizontally within the container\r\n        transform: \"translate(-50%, -50%)\", // Adjust for proper centering\r\n        opacity: 0.2, // Semi-transparent\r\n        fontSize: \"20px\", // Adjust font size as needed\r\n        color: \"black\", // Font color\r\n        pointerEvents: \"none\", // Prevent user interaction with the watermark\r\n        transformStyle: \"preserve-3d\", // Keeps rotation smooth\r\n        zIndex: 9999, // Ensures it's above other elements\r\n        userSelect: \"none\", // Prevent text selection\r\n        textAlign: \"center\", // Align text in the center\r\n      }}\r\n    >\r\n      <p>\r\n        User: {userName} | ID: {userID} | {new Date().toLocaleTimeString()}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicWatermark;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EACjD,oBACEH,OAAA;IACEI,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MAAE;MACtBC,GAAG,EAAE,KAAK;MAAE;MACZC,IAAI,EAAE,KAAK;MAAE;MACbC,SAAS,EAAE,uBAAuB;MAAE;MACpCC,OAAO,EAAE,GAAG;MAAE;MACdC,QAAQ,EAAE,MAAM;MAAE;MAClBC,KAAK,EAAE,OAAO;MAAE;MAChBC,aAAa,EAAE,MAAM;MAAE;MACvBC,cAAc,EAAE,aAAa;MAAE;MAC/BC,MAAM,EAAE,IAAI;MAAE;MACdC,UAAU,EAAE,MAAM;MAAE;MACpBC,SAAS,EAAE,QAAQ,CAAE;IACvB,CAAE;IAAAC,QAAA,eAEFjB,OAAA;MAAAiB,QAAA,GAAG,QACK,EAACf,QAAQ,EAAC,SAAO,EAACC,MAAM,EAAC,KAAG,EAAC,IAAIe,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACC,EAAA,GAvBIvB,gBAAgB;AAyBtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}