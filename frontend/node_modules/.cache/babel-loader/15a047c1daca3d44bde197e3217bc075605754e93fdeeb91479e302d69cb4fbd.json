{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = () => {\n  _s();\n  var _currentQ$options;\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answers, setAnswers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(3600); // 1-hour timer\n  const [warningMessage, setWarningMessage] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  // Initialize WebSocket connection\n  // WebSocket setup\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:3001\");\n    setSocket(newSocket);\n    newSocket.on(\"connect\", () => {\n      console.log(\"Connected to WebSocket server:\", newSocket.id);\n    });\n    newSocket.on(\"risk_warning\", data => {\n      setWarningMessage(data.message);\n      setTimeout(() => setWarningMessage(null), 5000);\n    });\n    newSocket.on(\"lock_exam\", data => {\n      alert(data.message);\n      navigate(\"/exam-selection\");\n    });\n    return () => {\n      newSocket.disconnect(); // Cleanup\n    };\n  }, [navigate]);\n\n  // Fetch exam questions\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/exams/${examId}/questions`, {\n          withCredentials: true\n        });\n        setQuestions(response.data.questions);\n        setLoading(false);\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error fetching questions:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert(\"Failed to load exam questions.\");\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, [examId]);\n\n  // Timer countdown logic\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(countdown);\n          handleSubmitExam(); // Auto-submit when the timer ends\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown); // Cleanup on unmount\n  }, []);\n\n  // Centralized emit function for WebSocket events\n  // Replace this with the actual studentId (e.g., from authentication context)\n\n  // Centralized emit function for WebSocket events\n  const emitEvent = (eventName, data) => {\n    if (socket && examId && studentId) {\n      socket.emit(eventName, {\n        ...data,\n        examId,\n        studentId,\n        timestamp: Date.now()\n      });\n    } else {\n      console.error(`Failed to emit ${eventName}: socket, examId, or studentId is undefined.`);\n    }\n  };\n\n  // Emit mouse movement\n  useEffect(() => {\n    const handleMouseMove = e => {\n      emitEvent(\"mouse_activity\", {\n        x: e.clientX,\n        y: e.clientY\n      });\n    };\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n  }, [socket, examId, studentId]);\n\n  // Emit keystroke activity\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (document.visibilityState === \"visible\") {\n        emitEvent(\"keystroke_activity\", {\n          key: e.key\n        }); // Reduce risk only if focused\n      } else {\n        console.warn(\"Keystroke detected outside exam tab\");\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [socket, examId, studentId]);\n\n  // Emit tab change activity\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === \"hidden\") {\n        emitEvent(\"tab_change\", {\n          action: \"Tab switched\"\n        });\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, [socket, examId, studentId]);\n  useEffect(() => {\n    const id = sessionStorage.getItem(\"studentId\");\n    if (!id) {\n      alert(\"You are not logged in. Please log in to continue.\");\n      console.error(\"Student ID not found in session storage.\");\n      navigate(\"/login\"); // Redirect user to login page if not logged in\n    } else {\n      setStudentId(id); // Set the studentId in state\n    }\n  }, [navigate]);\n  // Tab change tracking\n  useEffect(() => {\n    console.log(\"Student ID retrieved:\", studentId);\n  }, [studentId]);\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === \"hidden\") {\n        emitEvent(\"tab_change\", {\n          action: \"Tab switched\"\n        });\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, [socket, examId]);\n\n  // Handle answer selection\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n\n    // Save the selected answer for the current question\n    setAnswers(prev => {\n      const updatedAnswers = [...prev];\n      updatedAnswers[currentQuestion] = {\n        questionId: questions[currentQuestion].id,\n        answer: option\n      };\n      return updatedAnswers;\n    });\n  };\n\n  // Handle navigation to the next question or submit the exam\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedOption(null); // Reset selected option\n    } else {\n      handleSubmitExam(); // Submit when on the last question\n    }\n  };\n\n  // Submit the exam to the backend\n  // Submit the exam to the backend\n  const handleSubmitExam = async () => {\n    try {\n      setLoading(true); // Start loading spinner\n\n      // Validate answers\n      if (!answers || answers.length === 0) {\n        alert(\"No answers provided. Please complete the exam before submitting.\");\n        setLoading(false);\n        return;\n      }\n\n      // Ensure all questions are answered\n      if (answers.length !== questions.length) {\n        alert(\"Please answer all questions before submitting.\");\n        setLoading(false);\n        return;\n      }\n\n      // Retrieve student ID dynamically\n      const studentId = sessionStorage.getItem(\"studentId\");\n      if (!studentId) {\n        alert(\"You are not logged in. Please log in to continue.\");\n        setLoading(false);\n        console.error(\"Student ID not found in session storage.\");\n        return;\n      }\n\n      // Prepare payload for submission\n      const payload = {\n        examId,\n        studentId,\n        answers\n      };\n\n      // Debugging: Log the payload before submission\n      console.log(\"Submitting exam payload:\", payload);\n\n      // Make API call to submit the exam\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\n        withCredentials: true // Ensures session cookies are sent for authentication\n      });\n\n      // Handle successful response\n      const results = response.data.results;\n      alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\n      console.log(\"Submission results:\", results);\n\n      // Navigate to results page with state\n      navigate(\"/results\", {\n        state: {\n          results\n        }\n      });\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error submitting the exam:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n\n      // Handle known errors\n      if (error.response) {\n        alert(`Failed to submit the exam: ${error.response.data.error || \"Unknown error occurred.\"}`);\n      } else {\n        // Handle unknown or network-related errors\n        alert(\"An unexpected error occurred. Please check your connection and try again.\");\n      }\n    } finally {\n      // Ensure loading spinner is stopped\n      setLoading(false);\n    }\n  };\n  if (!studentId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 10\n    }, this); // Show a loading message while studentId is being retrieved\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQ = questions[currentQuestion]; // Get current question safely\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [warningMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-warning text-center\",\n      role: \"alert\",\n      children: warningMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary\",\n        children: \"Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger h4\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (\"0\" + timer % 60).slice(-2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), currentQ ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Q\", currentQuestion + 1, \": \", currentQ.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: (_currentQ$options = currentQ.options) === null || _currentQ$options === void 0 ? void 0 : _currentQ$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: `question-${currentQuestion}`,\n            id: `option-${index}`,\n            value: option,\n            onChange: () => handleOptionChange(option),\n            checked: selectedOption === option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-4\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null,\n        children: currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No more questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"4/biCSXwlLUaJckfFDvYyypsp1c=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","jsxDEV","_jsxDEV","ExamPage","_s","_currentQ$options","examId","navigate","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","answers","setAnswers","loading","setLoading","timer","setTimer","warningMessage","setWarningMessage","socket","setSocket","newSocket","on","console","log","id","data","message","setTimeout","alert","disconnect","fetchQuestions","response","get","withCredentials","error","_error$response","countdown","setInterval","prev","clearInterval","handleSubmitExam","emitEvent","eventName","studentId","emit","timestamp","Date","now","handleMouseMove","e","x","clientX","y","clientY","window","addEventListener","removeEventListener","handleKeyDown","document","visibilityState","key","warn","handleVisibilityChange","action","sessionStorage","getItem","setStudentId","handleOptionChange","option","updatedAnswers","questionId","answer","handleNextQuestion","length","payload","post","results","score","totalQuestions","state","_error$response2","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQ","className","role","Math","floor","slice","text","options","map","index","type","name","value","onChange","checked","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst ExamPage = () => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timer, setTimer] = useState(3600); // 1-hour timer\r\n  const [warningMessage, setWarningMessage] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  // Initialize WebSocket connection\r\n  // WebSocket setup\r\nuseEffect(() => {\r\n  const newSocket = io(\"http://localhost:3001\");\r\n  setSocket(newSocket);\r\n\r\n  newSocket.on(\"connect\", () => {\r\n    console.log(\"Connected to WebSocket server:\", newSocket.id);\r\n  });\r\n\r\n  newSocket.on(\"risk_warning\", (data) => {\r\n    setWarningMessage(data.message);\r\n    setTimeout(() => setWarningMessage(null), 5000);\r\n  });\r\n\r\n  newSocket.on(\"lock_exam\", (data) => {\r\n    alert(data.message);\r\n    navigate(\"/exam-selection\");\r\n  });\r\n\r\n  return () => {\r\n    newSocket.disconnect(); // Cleanup\r\n  };\r\n}, [navigate]);\r\n\r\n\r\n  // Fetch exam questions\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/exams/${examId}/questions`,\r\n          { withCredentials: true }\r\n        );\r\n        setQuestions(response.data.questions);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching questions:\", error.response?.data || error.message);\r\n        alert(\"Failed to load exam questions.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [examId]);\r\n\r\n  // Timer countdown logic\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(countdown);\r\n          handleSubmitExam(); // Auto-submit when the timer ends\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown); // Cleanup on unmount\r\n  }, []);\r\n\r\n  // Centralized emit function for WebSocket events\r\n   // Replace this with the actual studentId (e.g., from authentication context)\r\n\r\n// Centralized emit function for WebSocket events\r\nconst emitEvent = (eventName, data) => {\r\n  if (socket && examId && studentId) {\r\n    socket.emit(eventName, { ...data, examId, studentId, timestamp: Date.now() });\r\n  } else {\r\n    console.error(`Failed to emit ${eventName}: socket, examId, or studentId is undefined.`);\r\n  }\r\n};\r\n\r\n// Emit mouse movement\r\nuseEffect(() => {\r\n  const handleMouseMove = (e) => {\r\n    emitEvent(\"mouse_activity\", { x: e.clientX, y: e.clientY });\r\n  };\r\n  window.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n  return () => window.removeEventListener(\"mousemove\", handleMouseMove);\r\n}, [socket, examId, studentId]);\r\n\r\n// Emit keystroke activity\r\nuseEffect(() => {\r\n  const handleKeyDown = (e) => {\r\n    if (document.visibilityState === \"visible\") {\r\n      emitEvent(\"keystroke_activity\", { key: e.key }); // Reduce risk only if focused\r\n    } else {\r\n      console.warn(\"Keystroke detected outside exam tab\");\r\n    }\r\n  };\r\n  \r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n  return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n}, [socket, examId, studentId]);\r\n\r\n// Emit tab change activity\r\nuseEffect(() => {\r\n  const handleVisibilityChange = () => {\r\n    if (document.visibilityState === \"hidden\") {\r\n      emitEvent(\"tab_change\", { action: \"Tab switched\" });\r\n    }\r\n  };\r\n  document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n  return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n}, [socket, examId, studentId]);\r\n\r\nuseEffect(() => {\r\n  const id = sessionStorage.getItem(\"studentId\");\r\n  if (!id) {\r\n    alert(\"You are not logged in. Please log in to continue.\");\r\n    console.error(\"Student ID not found in session storage.\");\r\n    navigate(\"/login\"); // Redirect user to login page if not logged in\r\n  } else {\r\n    setStudentId(id); // Set the studentId in state\r\n  }\r\n}, [navigate]);\r\n  // Tab change tracking\r\n  useEffect(() => {\r\n    console.log(\"Student ID retrieved:\", studentId);\r\n  }, [studentId]);\r\n  \r\n\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === \"hidden\") {\r\n        emitEvent(\"tab_change\", { action: \"Tab switched\" });\r\n      }\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\r\n\r\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\r\n  }, [socket, examId]);\r\n\r\n  // Handle answer selection\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n\r\n    // Save the selected answer for the current question\r\n    setAnswers((prev) => {\r\n      const updatedAnswers = [...prev];\r\n      updatedAnswers[currentQuestion] = {\r\n        questionId: questions[currentQuestion].id,\r\n        answer: option,\r\n      };\r\n      return updatedAnswers;\r\n    });\r\n  };\r\n\r\n  // Handle navigation to the next question or submit the exam\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedOption(null); // Reset selected option\r\n    } else {\r\n      handleSubmitExam(); // Submit when on the last question\r\n    }\r\n  };\r\n\r\n  // Submit the exam to the backend\r\n // Submit the exam to the backend\r\n const handleSubmitExam = async () => {\r\n  try {\r\n    setLoading(true); // Start loading spinner\r\n\r\n    // Validate answers\r\n    if (!answers || answers.length === 0) {\r\n      alert(\"No answers provided. Please complete the exam before submitting.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Ensure all questions are answered\r\n    if (answers.length !== questions.length) {\r\n      alert(\"Please answer all questions before submitting.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Retrieve student ID dynamically\r\n    const studentId = sessionStorage.getItem(\"studentId\");\r\n    if (!studentId) {\r\n      alert(\"You are not logged in. Please log in to continue.\");\r\n      setLoading(false);\r\n      console.error(\"Student ID not found in session storage.\");\r\n      return;\r\n    }\r\n\r\n    // Prepare payload for submission\r\n    const payload = {\r\n      examId,\r\n      studentId,\r\n      answers,\r\n    };\r\n\r\n    // Debugging: Log the payload before submission\r\n    console.log(\"Submitting exam payload:\", payload);\r\n\r\n    // Make API call to submit the exam\r\n    const response = await axios.post(\"http://localhost:3001/submit-exam\", payload, {\r\n      withCredentials: true, // Ensures session cookies are sent for authentication\r\n    });\r\n\r\n    // Handle successful response\r\n    const results = response.data.results;\r\n    alert(`Exam submitted successfully! Your score: ${results.score}/${results.totalQuestions}`);\r\n    console.log(\"Submission results:\", results);\r\n\r\n    // Navigate to results page with state\r\n    navigate(\"/results\", { state: { results } });\r\n  } catch (error) {\r\n    console.error(\"Error submitting the exam:\", error.response?.data || error.message);\r\n\r\n    // Handle known errors\r\n    if (error.response) {\r\n      alert(`Failed to submit the exam: ${error.response.data.error || \"Unknown error occurred.\"}`);\r\n    } else {\r\n      // Handle unknown or network-related errors\r\n      alert(\"An unexpected error occurred. Please check your connection and try again.\");\r\n    }\r\n  } finally {\r\n    // Ensure loading spinner is stopped\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  \r\n  \r\nif (!studentId) {\r\n  return <p>Loading...</p>; // Show a loading message while studentId is being retrieved\r\n}\r\n\r\n\r\n  if (questions.length === 0) {\r\n    return <p>No questions available for this exam.</p>;\r\n  }\r\n\r\n  const currentQ = questions[currentQuestion]; // Get current question safely\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {/* Warning banner for risk activity */}\r\n      {warningMessage && (\r\n        <div className=\"alert alert-warning text-center\" role=\"alert\">\r\n          {warningMessage}\r\n        </div>\r\n      )}\r\n\r\n      <header className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1 className=\"text-primary\">Exam</h1>\r\n        <div className=\"text-danger h4\">\r\n          Time Left: {Math.floor(timer / 60)}:{(\"0\" + (timer % 60)).slice(-2)}\r\n        </div>\r\n      </header>\r\n\r\n      {currentQ ? (\r\n        <div className=\"card shadow-lg p-4\">\r\n          <h4 className=\"card-title\">\r\n            Q{currentQuestion + 1}: {currentQ.text}\r\n          </h4>\r\n          <div className=\"mt-3\">\r\n            {currentQ.options?.map((option, index) => (\r\n              <div key={index} className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestion}`}\r\n                  id={`option-${index}`}\r\n                  value={option}\r\n                  onChange={() => handleOptionChange(option)}\r\n                  checked={selectedOption === option}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`option-${index}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-4\"\r\n            onClick={handleNextQuestion}\r\n            disabled={selectedOption === null}\r\n          >\r\n            {currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>No more questions available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}