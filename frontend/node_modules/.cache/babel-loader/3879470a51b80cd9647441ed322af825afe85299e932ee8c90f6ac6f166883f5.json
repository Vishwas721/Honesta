{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamSelection = () => {\n  _s();\n  const {\n    id: examId\n  } = useParams(); // Get exam ID from route\n  const [exams, setExams] = useState([]); // For the exam list\n  const [exam, setExam] = useState(null); // For specific exam by id\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchExamsOrExamById = async () => {\n      try {\n        if (examId) {\n          // Fetch specific exam details if examId is present\n          const response = await axios.get(`http://localhost:3001/exam-selection/${examId}`, {\n            withCredentials: true,\n            params: {\n              studentId: \"CURRENT_USER_ID\"\n            } // Replace with actual user ID\n          });\n          setExam(response.data.exam);\n        } else {\n          // Fetch all exams when no examId is provided\n          const response = await axios.get(\"http://localhost:3001/exams\", {\n            withCredentials: true\n          });\n          setExams(response.data.exams);\n        }\n      } catch (err) {\n        var _err$response;\n        if (err.response) {\n          if (err.response.status === 401) {\n            setError(\"You are not authorized. Please log in first.\");\n          } else {\n            setError(err.response.data.error || \"Failed to load exams. Please try again later.\");\n          }\n        } else {\n          setError(\"Network error. Please check your connection and try again.\");\n        }\n        console.error(\"Error fetching exams or exam details:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchExamsOrExamById();\n  }, [examId]);\n  const handleTakeExam = examId => {\n    navigate(`/guideline/${examId}`); // Navigate to exam guidelines\n  };\n  const handleViewResults = examId => {\n    navigate(`/results`, {\n      state: {\n        examId\n      }\n    }); // Navigate to exam results\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Loading \", examId ? \"exam details...\" : \"exams...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  if (examId && exam) {\n    // Render single exam if examId is provided\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4\",\n        children: exam.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exam.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), exam.blocked ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        disabled: true,\n        children: \"You are blocked from this exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : exam.attempted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        disabled: true,\n        children: \"Already Attempted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => handleTakeExam(exam.id),\n        children: \"Take Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render all exams if no examId is provided\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Available Exams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), exams.map(exam => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3 p-3 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: exam.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exam.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), exam.blocked ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        disabled: true,\n        children: \"You are blocked from this exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this) : exam.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => handleViewResults(exam.id),\n        children: \"View Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : exam.attempted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        disabled: true,\n        children: \"Already Attempted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => handleTakeExam(exam.id),\n        children: \"Take Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, exam.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamSelection, \"CPxMlBh3uCDYSmAC30lY7QVg0zw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamSelection;\nexport default ExamSelection;\nvar _c;\n$RefreshReg$(_c, \"ExamSelection\");","map":{"version":3,"names":["React","useEffect","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","ExamSelection","_s","id","examId","exams","setExams","exam","setExam","loading","setLoading","error","setError","navigate","fetchExamsOrExamById","response","get","withCredentials","params","studentId","data","err","_err$response","status","console","message","handleTakeExam","handleViewResults","state","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","blocked","disabled","attempted","onClick","map","completed","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamSelection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst ExamSelection = () => {\r\n  const { id: examId } = useParams(); // Get exam ID from route\r\n  const [exams, setExams] = useState([]); // For the exam list\r\n  const [exam, setExam] = useState(null); // For specific exam by id\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchExamsOrExamById = async () => {\r\n      try {\r\n        if (examId) {\r\n          // Fetch specific exam details if examId is present\r\n          const response = await axios.get(`http://localhost:3001/exam-selection/${examId}`, {\r\n            withCredentials: true,\r\n            params: { studentId: \"CURRENT_USER_ID\" }, // Replace with actual user ID\r\n          });\r\n          setExam(response.data.exam);\r\n        } else {\r\n          // Fetch all exams when no examId is provided\r\n          const response = await axios.get(\"http://localhost:3001/exams\", { withCredentials: true });\r\n          setExams(response.data.exams);\r\n        }\r\n      } catch (err) {\r\n        if (err.response) {\r\n          if (err.response.status === 401) {\r\n            setError(\"You are not authorized. Please log in first.\");\r\n          } else {\r\n            setError(err.response.data.error || \"Failed to load exams. Please try again later.\");\r\n          }\r\n        } else {\r\n          setError(\"Network error. Please check your connection and try again.\");\r\n        }\r\n        console.error(\"Error fetching exams or exam details:\", err.response?.data || err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchExamsOrExamById();\r\n  }, [examId]);\r\n\r\n  const handleTakeExam = (examId) => {\r\n    navigate(`/guideline/${examId}`); // Navigate to exam guidelines\r\n  };\r\n\r\n  const handleViewResults = (examId) => {\r\n    navigate(`/results`, { state: { examId } }); // Navigate to exam results\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading {examId ? \"exam details...\" : \"exams...\"}</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"text-danger\">{error}</p>;\r\n  }\r\n\r\n  if (examId && exam) {\r\n    // Render single exam if examId is provided\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <h1 className=\"mb-4\">{exam.name}</h1>\r\n        <p>{exam.description}</p>\r\n\r\n        {/* Display appropriate button based on status */}\r\n        {exam.blocked ? (\r\n          <button className=\"btn btn-danger\" disabled>\r\n            You are blocked from this exam\r\n          </button>\r\n        ) : exam.attempted ? (\r\n          <button className=\"btn btn-warning\" disabled>\r\n            Already Attempted\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-primary\" onClick={() => handleTakeExam(exam.id)}>\r\n            Take Test\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render all exams if no examId is provided\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"mb-4\">Available Exams</h1>\r\n      {exams.map((exam) => (\r\n        <div key={exam.id} className=\"card mb-3 p-3 shadow\">\r\n          <h5>{exam.name}</h5>\r\n          <p>{exam.description}</p>\r\n\r\n          {/* Handle different exam statuses */}\r\n          {exam.blocked ? (\r\n            <button className=\"btn btn-danger\" disabled>\r\n              You are blocked from this exam\r\n            </button>\r\n          ) : exam.completed ? (\r\n            <button className=\"btn btn-secondary\" onClick={() => handleViewResults(exam.id)}>\r\n              View Results\r\n            </button>\r\n          ) : exam.attempted ? (\r\n            <button className=\"btn btn-warning\" disabled>\r\n              Already Attempted\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn btn-primary\" onClick={() => handleTakeExam(exam.id)}>\r\n              Take Test\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamSelection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,EAAE,EAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMkB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd,MAAMoB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,IAAIV,MAAM,EAAE;UACV;UACA,MAAMW,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,wCAAwCZ,MAAM,EAAE,EAAE;YACjFa,eAAe,EAAE,IAAI;YACrBC,MAAM,EAAE;cAAEC,SAAS,EAAE;YAAkB,CAAC,CAAE;UAC5C,CAAC,CAAC;UACFX,OAAO,CAACO,QAAQ,CAACK,IAAI,CAACb,IAAI,CAAC;QAC7B,CAAC,MAAM;UACL;UACA,MAAMQ,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,6BAA6B,EAAE;YAAEC,eAAe,EAAE;UAAK,CAAC,CAAC;UAC1FX,QAAQ,CAACS,QAAQ,CAACK,IAAI,CAACf,KAAK,CAAC;QAC/B;MACF,CAAC,CAAC,OAAOgB,GAAG,EAAE;QAAA,IAAAC,aAAA;QACZ,IAAID,GAAG,CAACN,QAAQ,EAAE;UAChB,IAAIM,GAAG,CAACN,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;YAC/BX,QAAQ,CAAC,8CAA8C,CAAC;UAC1D,CAAC,MAAM;YACLA,QAAQ,CAACS,GAAG,CAACN,QAAQ,CAACK,IAAI,CAACT,KAAK,IAAI,+CAA+C,CAAC;UACtF;QACF,CAAC,MAAM;UACLC,QAAQ,CAAC,4DAA4D,CAAC;QACxE;QACAY,OAAO,CAACb,KAAK,CAAC,uCAAuC,EAAE,EAAAW,aAAA,GAAAD,GAAG,CAACN,QAAQ,cAAAO,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAIC,GAAG,CAACI,OAAO,CAAC;MAC3F,CAAC,SAAS;QACRf,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,MAAMsB,cAAc,GAAItB,MAAM,IAAK;IACjCS,QAAQ,CAAC,cAAcT,MAAM,EAAE,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMuB,iBAAiB,GAAIvB,MAAM,IAAK;IACpCS,QAAQ,CAAC,UAAU,EAAE;MAAEe,KAAK,EAAE;QAAExB;MAAO;IAAE,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,IAAIK,OAAO,EAAE;IACX,oBAAOT,OAAA;MAAA6B,QAAA,GAAG,UAAQ,EAACzB,MAAM,GAAG,iBAAiB,GAAG,UAAU;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACjE;EAEA,IAAItB,KAAK,EAAE;IACT,oBAAOX,OAAA;MAAGkC,SAAS,EAAC,aAAa;MAAAL,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC/C;EAEA,IAAI7B,MAAM,IAAIG,IAAI,EAAE;IAClB;IACA,oBACEP,OAAA;MAAKkC,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7B7B,OAAA;QAAIkC,SAAS,EAAC,MAAM;QAAAL,QAAA,EAAEtB,IAAI,CAAC4B;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrCjC,OAAA;QAAA6B,QAAA,EAAItB,IAAI,CAAC6B;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGxB1B,IAAI,CAAC8B,OAAO,gBACXrC,OAAA;QAAQkC,SAAS,EAAC,gBAAgB;QAACI,QAAQ;QAAAT,QAAA,EAAC;MAE5C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACP1B,IAAI,CAACgC,SAAS,gBAChBvC,OAAA;QAAQkC,SAAS,EAAC,iBAAiB;QAACI,QAAQ;QAAAT,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETjC,OAAA;QAAQkC,SAAS,EAAC,iBAAiB;QAACM,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACnB,IAAI,CAACJ,EAAE,CAAE;QAAA0B,QAAA,EAAC;MAE5E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;;EAEA;EACA,oBACEjC,OAAA;IAAKkC,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7B7B,OAAA;MAAIkC,SAAS,EAAC,MAAM;MAAAL,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxC5B,KAAK,CAACoC,GAAG,CAAElC,IAAI,iBACdP,OAAA;MAAmBkC,SAAS,EAAC,sBAAsB;MAAAL,QAAA,gBACjD7B,OAAA;QAAA6B,QAAA,EAAKtB,IAAI,CAAC4B;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBjC,OAAA;QAAA6B,QAAA,EAAItB,IAAI,CAAC6B;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAGxB1B,IAAI,CAAC8B,OAAO,gBACXrC,OAAA;QAAQkC,SAAS,EAAC,gBAAgB;QAACI,QAAQ;QAAAT,QAAA,EAAC;MAE5C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACP1B,IAAI,CAACmC,SAAS,gBAChB1C,OAAA;QAAQkC,SAAS,EAAC,mBAAmB;QAACM,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACpB,IAAI,CAACJ,EAAE,CAAE;QAAA0B,QAAA,EAAC;MAEjF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACP1B,IAAI,CAACgC,SAAS,gBAChBvC,OAAA;QAAQkC,SAAS,EAAC,iBAAiB;QAACI,QAAQ;QAAAT,QAAA,EAAC;MAE7C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETjC,OAAA;QAAQkC,SAAS,EAAC,iBAAiB;QAACM,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACnB,IAAI,CAACJ,EAAE,CAAE;QAAA0B,QAAA,EAAC;MAE5E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA,GArBO1B,IAAI,CAACJ,EAAE;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsBZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAlHID,aAAa;EAAA,QACMJ,SAAS,EAKfC,WAAW;AAAA;AAAA6C,EAAA,GANxB1C,aAAa;AAoHnB,eAAeA,aAAa;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}