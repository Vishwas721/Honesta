{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamSelection = () => {\n  _s();\n  const [exams, setExams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchExams = async () => {\n      try {\n        // Make API call to fetch exams\n        const response = await axios.get(\"http://localhost:3001/exams\", {\n          withCredentials: true\n        });\n        setExams(response.data.exams); // Store exams in state\n      } catch (err) {\n        var _err$response;\n        // Check for specific error codes or fallback\n        if (err.response) {\n          if (err.response.status === 401) {\n            setError(\"You are not authorized. Please log in first.\");\n          } else {\n            setError(err.response.data.error || \"Failed to load exams. Please try again later.\");\n          }\n        } else {\n          setError(\"Network error. Please check your connection and try again.\");\n        }\n        console.error(\"Error fetching exams:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      } finally {\n        setLoading(false); // Hide loading spinner\n      }\n    };\n    fetchExams();\n  }, []); // Fetch exams only on component mount\n\n  const handleTakeExam = async examId => {\n    try {\n      // Attempt to validate access to the exam\n      const response = await axios.get(`http://localhost:3001/start-exam/${examId}`, {\n        withCredentials: true // Ensures session cookies are sent\n      });\n      if (response.status === 200) {\n        // Access granted - navigate to the guideline page for the exam\n        navigate(`/guideline/${examId}`);\n      }\n    } catch (error) {\n      // Handle specific error cases returned from the server\n      if (error.response) {\n        const {\n          status,\n          data\n        } = error.response;\n        if (status === 403) {\n          // If the user is blocked or has already completed the exam\n          alert(data.error || \"You are not allowed to take this exam.\");\n        } else if (status === 401) {\n          // If the user is not authenticated\n          alert(\"Authentication error. Please log in again.\");\n          window.location.href = \"/login\"; // Redirect to login page\n        } else {\n          // Handle other server-side errors\n          console.error(\"Unexpected server error:\", data.error || \"Unknown server error\");\n          alert(\"An unexpected error occurred while trying to start the exam. Please try again later.\");\n        }\n      } else {\n        // Handle network or client-side errors\n        console.error(\"Network or client-side error:\", error.message);\n        alert(\"A network error occurred. Please check your connection and try again.\");\n      }\n    }\n  };\n  const handleViewResults = examId => {\n    navigate(`/results`, {\n      state: {\n        examId\n      }\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading exams...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Available Exams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), exams.map(exam => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3 p-3 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: exam.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: exam.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), exam.blocked ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        disabled: true,\n        children: \"You are blocked from this exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : exam.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        disabled: true,\n        children: \"Already Attempted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => handleTakeExam(exam.id),\n        children: \"Take Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, exam.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamSelection, \"GNsRocI5OMtUXq0nFVvLYNZ4QSk=\", false, function () {\n  return [useNavigate];\n});\n_c = ExamSelection;\nexport default ExamSelection;\nvar _c;\n$RefreshReg$(_c, \"ExamSelection\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","ExamSelection","_s","exams","setExams","loading","setLoading","error","setError","navigate","fetchExams","response","get","withCredentials","data","err","_err$response","status","console","message","handleTakeExam","examId","alert","window","location","href","handleViewResults","state","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","exam","name","description","blocked","disabled","completed","onClick","id","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamSelection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ExamSelection = () => {\r\n  const [exams, setExams] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchExams = async () => {\r\n      try {\r\n        // Make API call to fetch exams\r\n        const response = await axios.get(\"http://localhost:3001/exams\", { withCredentials: true });\r\n        setExams(response.data.exams); // Store exams in state\r\n      } catch (err) {\r\n        // Check for specific error codes or fallback\r\n        if (err.response) {\r\n          if (err.response.status === 401) {\r\n            setError(\"You are not authorized. Please log in first.\");\r\n          } else {\r\n            setError(err.response.data.error || \"Failed to load exams. Please try again later.\");\r\n          }\r\n        } else {\r\n          setError(\"Network error. Please check your connection and try again.\");\r\n        }\r\n\r\n        console.error(\"Error fetching exams:\", err.response?.data || err.message);\r\n      } finally {\r\n        setLoading(false); // Hide loading spinner\r\n      }\r\n    };\r\n\r\n    fetchExams();\r\n  }, []); // Fetch exams only on component mount\r\n\r\n  const handleTakeExam = async (examId) => {\r\n    try {\r\n      // Attempt to validate access to the exam\r\n      const response = await axios.get(`http://localhost:3001/start-exam/${examId}`, {\r\n        withCredentials: true, // Ensures session cookies are sent\r\n      });\r\n  \r\n      if (response.status === 200) {\r\n        // Access granted - navigate to the guideline page for the exam\r\n        navigate(`/guideline/${examId}`);\r\n      }\r\n    } catch (error) {\r\n      // Handle specific error cases returned from the server\r\n      if (error.response) {\r\n        const { status, data } = error.response;\r\n  \r\n        if (status === 403) {\r\n          // If the user is blocked or has already completed the exam\r\n          alert(data.error || \"You are not allowed to take this exam.\");\r\n        } else if (status === 401) {\r\n          // If the user is not authenticated\r\n          alert(\"Authentication error. Please log in again.\");\r\n          window.location.href = \"/login\"; // Redirect to login page\r\n        } else {\r\n          // Handle other server-side errors\r\n          console.error(\"Unexpected server error:\", data.error || \"Unknown server error\");\r\n          alert(\"An unexpected error occurred while trying to start the exam. Please try again later.\");\r\n        }\r\n      } else {\r\n        // Handle network or client-side errors\r\n        console.error(\"Network or client-side error:\", error.message);\r\n        alert(\"A network error occurred. Please check your connection and try again.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const handleViewResults = (examId) => {\r\n    navigate(`/results`, { state: { examId } });\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading exams...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"text-danger\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"mb-4\">Available Exams</h1>\r\n      {exams.map((exam) => (\r\n        <div key={exam.id} className=\"card mb-3 p-3 shadow\">\r\n          <h5>{exam.name}</h5>\r\n          <p>{exam.description}</p>\r\n\r\n          {/* Handle different exam statuses */}\r\n          {exam.blocked ? (\r\n            <button className=\"btn btn-danger\" disabled>\r\n              You are blocked from this exam\r\n            </button>\r\n          ) : exam.completed ? (\r\n            <button className=\"btn btn-secondary\" disabled>\r\n              Already Attempted\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn btn-primary\" onClick={() => handleTakeExam(exam.id)}>\r\n              Take Test\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamSelection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}