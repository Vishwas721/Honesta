{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web development\\\\rps\\\\frontend\\\\src\\\\components\\\\ExamPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = () => {\n  _s();\n  var _currentQ$options;\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answers, setAnswers] = useState([]); // Track student's answers\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(3600); // 1 hour in seconds\n\n  // Fetch questions for the exam\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3001/exams/${examId}/questions`, {\n          withCredentials: true\n        });\n        setQuestions(response.data.questions);\n        setLoading(false);\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error fetching questions:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        setLoading(false);\n        alert(\"Failed to load exam questions. Retrying...\");\n        setTimeout(fetchQuestions, 3000); // Retry after 3 seconds\n      }\n    };\n    fetchQuestions();\n  }, [examId]);\n\n  // Timer functionality\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(countdown);\n          alert(\"Time is up! Submitting the exam...\");\n          handleSubmitExam(); // Submit the exam automatically\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [answers]);\n\n  // Track student's selected answer\n  const handleOptionChange = option => {\n    setSelectedOption(option);\n    // Save the student's answer\n    setAnswers(prev => {\n      const existingAnswer = prev.find(a => a.questionId === questions[currentQuestion].id);\n      if (existingAnswer) {\n        return prev.map(a => a.questionId === questions[currentQuestion].id ? {\n          ...a,\n          answer: option\n        } : a);\n      } else {\n        return [...prev, {\n          questionId: questions[currentQuestion].id,\n          answer: option\n        }];\n      }\n    });\n  };\n\n  // Handle next question\n  const handleNextQuestion = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setSelectedOption(null); // Reset selected option\n    } else {\n      // All questions answered, submit the exam\n      alert(\"You have completed the exam!\");\n      handleSubmitExam();\n    }\n  };\n\n  // Submit exam to backend\n  const handleSubmitExam = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:3001/submit-exam\", {\n        examId,\n        studentId: 1,\n        // Replace this with actual student ID\n        answers // Ensure this is correctly formatted\n      }, {\n        withCredentials: true\n      } // Include authentication cookies if needed\n      );\n      const results = response.data.results;\n      alert(`Exam submitted! Your score: ${results.score}/${results.totalQuestions}`);\n      navigate(\"/results\", {\n        state: {\n          results\n        }\n      });\n    } catch (error) {\n      var _error$response2;\n      console.error(\"Error submitting exam:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      alert(\"Failed to submit the exam. Please try again.\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No questions available for this exam.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n  const currentQ = questions[currentQuestion]; // Get the current question safely\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-primary\",\n        children: \"Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger h4\",\n        children: [\"Time Left: \", Math.floor(timer / 60), \":\", (\"0\" + timer % 60).slice(-2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), currentQ ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow-lg p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Q\", currentQuestion + 1, \": \", currentQ.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: (_currentQ$options = currentQ.options) === null || _currentQ$options === void 0 ? void 0 : _currentQ$options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: `question-${currentQuestion}`,\n            id: `option-${index}`,\n            value: option,\n            onChange: () => handleOptionChange(option),\n            checked: selectedOption === option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-4\",\n        onClick: handleNextQuestion,\n        disabled: selectedOption === null,\n        children: currentQuestion === questions.length - 1 ? \"Finish Exam\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No more questions available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this) // Fallback if currentQ is undefined\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"zrRIrmxzCOzoAxCnIiOOSSVnW1o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ExamPage","_s","_currentQ$options","examId","navigate","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","answers","setAnswers","loading","setLoading","timer","setTimer","fetchQuestions","response","get","withCredentials","data","error","_error$response","console","message","alert","setTimeout","countdown","setInterval","prev","clearInterval","handleSubmitExam","handleOptionChange","option","existingAnswer","find","a","questionId","id","map","answer","handleNextQuestion","length","post","studentId","results","score","totalQuestions","state","_error$response2","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQ","className","Math","floor","slice","text","options","index","type","name","value","onChange","checked","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Web development/rps/frontend/src/components/ExamPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ExamPage = () => {\r\n  const { examId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [answers, setAnswers] = useState([]); // Track student's answers\r\n  const [loading, setLoading] = useState(true);\r\n  const [timer, setTimer] = useState(3600); // 1 hour in seconds\r\n\r\n  // Fetch questions for the exam\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:3001/exams/${examId}/questions`,\r\n          { withCredentials: true }\r\n        );\r\n        setQuestions(response.data.questions);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error fetching questions:\",\r\n          error.response?.data || error.message\r\n        );\r\n        setLoading(false);\r\n        alert(\"Failed to load exam questions. Retrying...\");\r\n        setTimeout(fetchQuestions, 3000); // Retry after 3 seconds\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, [examId]);\r\n\r\n  // Timer functionality\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(countdown);\r\n          alert(\"Time is up! Submitting the exam...\");\r\n          handleSubmitExam(); // Submit the exam automatically\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown);\r\n  }, [answers]);\r\n\r\n  // Track student's selected answer\r\n  const handleOptionChange = (option) => {\r\n    setSelectedOption(option);\r\n    // Save the student's answer\r\n    setAnswers((prev) => {\r\n      const existingAnswer = prev.find(\r\n        (a) => a.questionId === questions[currentQuestion].id\r\n      );\r\n      if (existingAnswer) {\r\n        return prev.map((a) =>\r\n          a.questionId === questions[currentQuestion].id\r\n            ? { ...a, answer: option }\r\n            : a\r\n        );\r\n      } else {\r\n        return [\r\n          ...prev,\r\n          { questionId: questions[currentQuestion].id, answer: option },\r\n        ];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handle next question\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setSelectedOption(null); // Reset selected option\r\n    } else {\r\n      // All questions answered, submit the exam\r\n      alert(\"You have completed the exam!\");\r\n      handleSubmitExam();\r\n    }\r\n  };\r\n\r\n  // Submit exam to backend\r\n  const handleSubmitExam = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:3001/submit-exam\",\r\n        {\r\n          examId,\r\n          studentId: 1, // Replace this with actual student ID\r\n          answers, // Ensure this is correctly formatted\r\n        },\r\n        { withCredentials: true } // Include authentication cookies if needed\r\n      );\r\n  \r\n      const results = response.data.results;\r\n      alert(`Exam submitted! Your score: ${results.score}/${results.totalQuestions}`);\r\n      navigate(\"/results\", { state: { results } });\r\n    } catch (error) {\r\n      console.error(\"Error submitting exam:\", error.response?.data || error.message);\r\n      alert(\"Failed to submit the exam. Please try again.\");\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  if (loading) {\r\n    return <p>Loading questions...</p>;\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return <p>No questions available for this exam.</p>;\r\n  }\r\n\r\n  const currentQ = questions[currentQuestion]; // Get the current question safely\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <header className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1 className=\"text-primary\">Exam</h1>\r\n        <div className=\"text-danger h4\">\r\n          Time Left: {Math.floor(timer / 60)}:{(\"0\" + (timer % 60)).slice(-2)}\r\n        </div>\r\n      </header>\r\n\r\n      {currentQ ? (\r\n        <div className=\"card shadow-lg p-4\">\r\n          <h4 className=\"card-title\">\r\n            Q{currentQuestion + 1}: {currentQ.text}\r\n          </h4>\r\n          <div className=\"mt-3\">\r\n            {currentQ.options?.map((option, index) => (\r\n              <div key={index} className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"radio\"\r\n                  name={`question-${currentQuestion}`}\r\n                  id={`option-${index}`}\r\n                  value={option}\r\n                  onChange={() => handleOptionChange(option)}\r\n                  checked={selectedOption === option}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`option-${index}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary mt-4\"\r\n            onClick={handleNextQuestion}\r\n            disabled={selectedOption === null}\r\n          >\r\n            {currentQuestion === questions.length - 1\r\n              ? \"Finish Exam\"\r\n              : \"Next Question\"}\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>No more questions available.</p> // Fallback if currentQ is undefined\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}